name: Supply Chain Security

on:
  push:
    branches: [main, v5]
  pull_request:
    branches: [main, v5]
  schedule:
    - cron: '0 6 * * 1' # Weekly on Monday at 6 AM UTC

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  supply-chain:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run OSV Scanner
        uses: google/osv-scanner-action@v2.2.2
        with:
          scan-args: |-
            -r
            --skip-git
            ./

      - name: Run Semgrep
        uses: semgrep/semgrep-action@v1
        with:
          config: >
            p/security-audit
            p/secrets
            p/owasp-top-ten
            p/javascript
            p/typescript
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          npx license-checker --json --out licenses.json
          
          # Check for prohibited licenses
          PROHIBITED_LICENSES="GPL-2.0,GPL-3.0,LGPL-2.0,LGPL-3.0,AGPL-1.0,AGPL-3.0"
          
          node -e "
            const licenses = JSON.parse(require('fs').readFileSync('licenses.json'));
            const prohibited = '$PROHIBITED_LICENSES'.split(',');
            let violations = [];
            
            Object.entries(licenses).forEach(([pkg, info]) => {
              const license = info.licenses || '';
              if (prohibited.some(p => license.includes(p))) {
                violations.push(\`\${pkg}: \${license}\`);
              }
            });
            
            if (violations.length > 0) {
              console.log('❌ License violations found:');
              violations.forEach(v => console.log('  ' + v));
              process.exit(1);
            } else {
              console.log('✅ No license violations found');
            }
          "

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: licenses.json